{"version":3,"sources":["scripts/main.js"],"names":["theadRow","document","querySelector","addEventListener","e","headerIndex","target","cellIndex","columnValues","querySelectorAll","values","map","value","innerText","sort","a","b","value1","value2","startsWith","replace","localeCompare","forEach","elem","i"],"mappings":";AAAA,aAIA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAFA,IAAMA,EAAWC,SAASC,cAAc,YAExCF,EAASG,iBAAiB,QAAS,SAACC,GAC5BC,IAAAA,EAAcD,EAAEE,OAAOC,UAAY,EACnCC,EAAeP,SAClBQ,iBAA0CJ,yBAAAA,OAAAA,EAD7C,MAEMK,EAAS,EAAIF,GAAcG,IAAI,SAAAC,GAC5BA,OAAAA,EAAMC,YAGfH,EAAOI,KAAK,SAACC,EAAGC,GACVC,IAAAA,EAASF,EACTG,EAASF,EAETD,OAAAA,EAAEI,WAAW,MAAQH,EAAEG,WAAW,MACpCF,EAASF,EAAEK,QAAQ,UAAW,MAC9BF,EAASF,EAAEI,QAAQ,UAAW,KAKzBH,EAAOI,cAAcH,KAG9BV,EAAac,QAAQ,SAACC,EAAMC,GAC1BhB,EAAagB,GAAGX,UAAYH,EAAOc","file":"main.0bab5abe.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst theadRow = document.querySelector('thead tr');\n\ntheadRow.addEventListener('click', (e) => {\n  const headerIndex = e.target.cellIndex + 1;\n  const columnValues = document\n    .querySelectorAll(`tbody tr td:nth-child(${headerIndex})`);\n  const values = [...columnValues].map(value => {\n    return value.innerText;\n  });\n\n  values.sort((a, b) => {\n    let value1 = a;\n    let value2 = b;\n\n    if (a.startsWith('$') || b.startsWith('$')) {\n      value1 = a.replace(/[^0-9]/g, '');\n      value2 = b.replace(/[^0-9]/g, '');\n\n      return value1 - value2;\n    }\n\n    return value1.localeCompare(value2);\n  });\n\n  columnValues.forEach((elem, i) => {\n    columnValues[i].innerText = values[i];\n  });\n});\n"]}